{"swagger": "2.0", "info": {"title": "BIMData API", "description": "BIMData API is a tool to interact with your models stored on BIMData\u2019s servers.\n    Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "contact@bimdata.io"}, "license": {"name": "Copyright BIMData.io"}, "version": "v1"}, "host": "api-staging.bimdata.io", "schemes": ["https"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"bimdata_connect": {"type": "oauth2", "description": "Use Documentation Application to login", "authorizationUrl": "https://iam-staging.bimdata.io/auth/realms/bimdata/protocol/openid-connect/auth", "flow": "implicit"}, "client_credentials": {"type": "oauth2", "description": "Use your own app to login. You MUST add https://developers-staging.bimdata.io/_static/swagger-dist/oauth2-redirect.html to your allowed redirect URIs (or https://api-staging.bimdata.io/* if we you're directly using the swagger on the API)", "flow": "application", "tokenUrl": "https://iam-staging.bimdata.io/auth/realms/bimdata/protocol/openid-connect/token"}, "Bearer": {"type": "apiKey", "description": "Copy/paste a valid access token here prefixed with \"Bearer \"", "name": "Authorization", "in": "header"}}, "security": [{"Bearer": []}, {"bimdata_connect": []}, {"client_credentials": []}], "paths": {"/bcf/2.1/current-user": {"get": {"operationId": "getUser", "summary": "Get current user info", "description": "Get current user info\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SelfBcfUser"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": []}, "/bcf/2.1/projects": {"get": {"operationId": "getBcfProjects", "summary": "Retrieve all BCF projects", "description": "Retrieve all BCF projects\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/BcfProject"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": []}, "/bcf/2.1/projects/{id}": {"get": {"operationId": "getBcfProject", "summary": "Retrieve a BCF project", "description": "Retrieve a BCF project\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BcfProject"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateBcfProject", "summary": "Update all fields of a BCF project", "description": "Update all fields of a BCF project\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BcfProject"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BcfProject"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "patch": {"operationId": "updateBcfProject", "summary": "Update some fields of a BCF project", "description": "Update some fields of a BCF project\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BcfProject"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BcfProject"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/bcf/2.1/projects/{id}/export": {"get": {"operationId": "downloadBcfExport", "summary": "Export project's topics in bcf-xml format", "description": "Export project's topics in bcf-xml format\nRequired scopes: bcf:read", "parameters": [{"name": "topics", "in": "query", "description": "topic guids to export, comma separated. Default = all", "type": "string"}, {"name": "format", "in": "query", "description": "topic format to export, comma separated. Default = all", "type": "string"}], "responses": {"200": {"description": "The file"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/bcf/2.1/projects/{projects_pk}/extensions": {"get": {"operationId": "getExtensions", "summary": "Retrieve project extensions", "description": "Retrieve project extensions", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Extensions"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "patch": {"operationId": "updateExtensions", "summary": "Update project extensions", "description": "Update project extensions", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Extensions"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Extensions"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/full-topic": {"get": {"operationId": "getFullTopics", "summary": "Retrieve all full topics", "description": "This is not a standard route. It responds with all topics, their viewpoints and their comments\nRequired scopes: bcf:read", "parameters": [{"name": "ifcs", "in": "query", "description": "Filter the returned list by ifcs", "required": false, "type": "string"}, {"name": "format", "in": "query", "description": "Filter the returned list by format", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FullTopic"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "post": {"operationId": "createFullTopic", "summary": "Create a Topic with viewpoints and comments", "description": "This is not a standard route. You can send a topic, viewpoints and comments in a single call\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FullTopic"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/FullTopic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/full-topic/{guid}": {"get": {"operationId": "getFullTopic", "summary": "Retrieve a full topic", "description": "This is not a standard route. It responds with a topic, its viewpoints and its comments\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FullTopic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateFullTopic", "summary": "Update all fields of a topic", "description": "This is not a standard route. You can update topic, viewpoints and comment is a signle call\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FullTopic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FullTopic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "patch": {"operationId": "updateFullTopic", "summary": "Update some fields of a topic", "description": "This is not a standard route. You can update topic, viewpoints and comment is a signle call\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FullTopic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FullTopic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics": {"get": {"operationId": "getTopics", "summary": "Retrieve all topics", "description": "Retrieve all topics\nRequired scopes: bcf:read", "parameters": [{"name": "ifcs", "in": "query", "description": "Filter the returned list by ifcs", "required": false, "type": "string"}, {"name": "format", "in": "query", "description": "Filter the returned list by format", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Topic"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "post": {"operationId": "createTopic", "summary": "Create a topic", "description": "Create a topic\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Topic"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{guid}": {"get": {"operationId": "getTopic", "summary": "Retrieve a topic", "description": "Retrieve a topic\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateTopic", "summary": "Update all fields of a topic", "description": "Update all fields of a topic\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Topic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "patch": {"operationId": "updateTopic", "summary": "Update some fields of a topic", "description": "Update some fields of a topic\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Topic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteTopic", "summary": "Delete a topic", "description": "Delete a topic\nRequired scopes: bcf:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments": {"get": {"operationId": "getComments", "summary": "Retrieve all comments", "description": "Retrieve all comments\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Comment"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "post": {"operationId": "createComment", "summary": "Create a comment", "description": "Create a comment\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/comments/{guid}": {"get": {"operationId": "getComment", "summary": "Retrieve a comment", "description": "Retrieve a comment\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateComment", "summary": "Update all fields of a comment", "description": "Update all fields of a comment\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "patch": {"operationId": "updateComment", "summary": "Update some fields of a comment", "description": "Update some fields of a comment\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteComment", "summary": "Delete a comment", "description": "Delete a comment\nRequired scopes: bcf:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/topic-viewpoints": {"get": {"operationId": "getTopicViewpoints", "summary": "Retrieve all viewpoints attached to the topic", "description": "This is not a standard route. It returns all viewpoints of the topic that are not attached to a comment.\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Viewpoint"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints": {"get": {"operationId": "getViewpoints", "summary": "Retrieve all Viewpoints of a topic", "description": "Retrieve all Viewpoints of a topic\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Viewpoint"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "post": {"operationId": "createViewpoint", "summary": "Create a Viewpoint", "description": "Create a Viewpoint\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Viewpoint"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}": {"get": {"operationId": "getViewpoint", "summary": "Retrieve a Viewpoint", "description": "Retrieve a Viewpoint\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateViewpoint", "summary": "Update all fields of a Viewpoint", "description": "This is not a standard route. Update all fields of a Viewpoint\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Viewpoint"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "patch": {"operationId": "updateViewpoint", "summary": "Update some fields of a Viewpoint", "description": "This is not a standard route. Update some fields of a Viewpoint\nRequired scopes: bcf:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Viewpoint"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteViewpoint", "summary": "Delete a Viewpoint", "description": "This is not a standard route. Delete a Viewpoint\nRequired scopes: bcf:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/coloring": {"get": {"operationId": "getColorings", "summary": "Retrieve all colorings of a viewpoint", "description": "Retrieve all colorings of a viewpoint\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Coloring"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/selection": {"get": {"operationId": "getSelections", "summary": "Retrieve all selections of a viewpoint", "description": "Retrieve all selections of a viewpoint\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/snapshot": {"get": {"operationId": "getSnapshot", "summary": "Retrieve the viewpoint' snapshot", "description": "Retrieve the viewpoint' snapshot\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "Snapshot file", "schema": {"description": "Snapshot file", "type": "file"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_guid}/viewpoints/{guid}/visibility": {"get": {"operationId": "getVisibilities", "summary": "Retrieve all visibilities of a viewpoint", "description": "Retrieve all visibilities of a viewpoint\nRequired scopes: bcf:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Visibility"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_guid", "in": "path", "required": true, "type": "string"}]}, "/cloud": {"get": {"operationId": "getClouds", "summary": "Retrieve all clouds", "description": "Returns user's (or app's) clouds only", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Cloud"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "post": {"operationId": "createCloud", "summary": "Create a cloud", "description": "\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Cloud"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": []}, "/cloud/{cloud_pk}/invitation": {"get": {"operationId": "getCloudInvitations", "summary": "Retrieve all pending invitations in the cloud", "description": "Returns app's invitations only\nRequired scopes: org:manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CloudInvitation"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "post": {"operationId": "inviteCloudUser", "summary": "Invite a cloud administrator", "description": "Invite cloud administrators only. To invite in a project, see inviteProjectUser. You can't invite a user already in the cloud. Create multiple invitations of the same email in the same cloud will generate multiple invitation emails but not multiple invitation object\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CloudInvitation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CloudInvitation"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/invitation/{id}": {"delete": {"operationId": "cancelCloudUserInvitation", "summary": "Cancel a pending invitation", "description": "Cancel a pending invitation\nRequired scopes: org:manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this invitation.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project": {"get": {"operationId": "getProjects", "summary": "Retrieve all projects", "description": "Retrieve all projects of the cloud. All project are shown at the same level. see #getProjectSubTree", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "post": {"operationId": "createProject", "summary": "Create a project", "description": "Create a project\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Project"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/subtree": {"get": {"operationId": "getProjectSubTree", "summary": "Retrieve the complete projects tree of the cloud", "description": "Retrieve the complete projects tree of the cloud", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProjectWithChildren"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{id}": {"get": {"operationId": "getProject", "summary": "Retrieve a project", "description": "Retrieve a project", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectWithChildren"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "put": {"operationId": "fullUpdateProject", "summary": "Update all fields of a project", "description": "Update all fields of a project\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "patch": {"operationId": "updateProject", "summary": "Update some fields of a project", "description": "Update some fields of a project\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "delete": {"operationId": "deleteProject", "summary": "Delete a project", "description": "It can take a long time to respond because we may need to delete all properties of all elements of all models in the project\nRequired scopes: org:manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{id}/dms-tree": {"get": {"operationId": "getProjectDMSTree", "summary": "Retrieve the complete DMS tree", "description": "Retrieve the complete DMS tree (all folders and all documents in the project)", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{id}/tree": {"get": {"operationId": "getProjectTree", "summary": "Retrieve the complete DMS tree", "description": "Retrieve the complete DMS tree (all folders and all documents in the project). DEPRECATED: renamed to getProjectDMSTree", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan": {"get": {"operationId": "getCheckplans", "summary": "Retrieve all Checkplans", "description": "Retrieve all Checkplans\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CheckPlan"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "post": {"operationId": "createCheckplan", "summary": "Create a Checkplan", "description": "TCreate a Checkplan\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckPlan"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset": {"get": {"operationId": "getRulesets", "summary": "Retrieve all Rulesets", "description": "Retrieve all Rulesets\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "post": {"operationId": "createRuleset", "summary": "Create a Ruleset", "description": "TCreate a Ruleset\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ruleset"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}": {"get": {"operationId": "getRuleset", "summary": "Retrieve one Ruleset", "description": "Retrieve one Ruleset\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "put": {"operationId": "fullUpdateRuleset", "summary": "Update all fields of a Ruleset", "description": "Update all fields of a Ruleset\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ruleset"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "patch": {"operationId": "updateRuleset", "summary": "Update some fields of a Ruleset", "description": "Update some fields of a Ruleset\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ruleset"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "delete": {"operationId": "deleteRuleset", "summary": "Delete a Ruleset", "description": "Delete a Ruleset\nRequired scopes: check:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ruleset.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule": {"get": {"operationId": "getRules", "summary": "Retrieve all Rules", "description": "Retrieve all Rules\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Rule"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "post": {"operationId": "createRule", "summary": "Create a Rule", "description": "TCreate a Rule\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Rule"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}": {"get": {"operationId": "getRule", "summary": "Retrieve one Rule", "description": "Retrieve one Rule\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "put": {"operationId": "fullUpdateRule", "summary": "Update all fields of a Rule", "description": "Update all fields of a Rule\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Rule"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "patch": {"operationId": "updateRule", "summary": "Update some fields of a Rule", "description": "Update some fields of a Rule\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Rule"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "delete": {"operationId": "deleteRule", "summary": "Delete a Rule", "description": "Delete a Rule\nRequired scopes: check:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this rule.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent": {"get": {"operationId": "getRuleComponents", "summary": "Retrieve all RuleComponents", "description": "Retrieve all RuleComponents\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/RuleComponent"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "post": {"operationId": "createRuleComponent", "summary": "Create a RuleComponent", "description": "TCreate a RuleComponent\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RuleComponent"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "rule_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}": {"get": {"operationId": "getRuleComponent", "summary": "Retrieve one RuleComponent", "description": "Retrieve one RuleComponent\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "put": {"operationId": "fullUpdateRuleComponent", "summary": "Update all fields of a RuleComponent", "description": "Update all fields of a RuleComponent\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RuleComponent"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "patch": {"operationId": "updateRuleComponent", "summary": "Update some fields of a RuleComponent", "description": "Update some fields of a RuleComponent\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RuleComponent"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "delete": {"operationId": "deleteRuleComponent", "summary": "Delete a RuleComponent", "description": "Delete a RuleComponent\nRequired scopes: check:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this rule component.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "rule_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}": {"get": {"operationId": "getCheckplan", "summary": "Retrieve one Checkplan", "description": "Retrieve one Checkplan\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "put": {"operationId": "fullUpdateCheckplan", "summary": "Update all fields of a Checkplan", "description": "Update all fields of a Checkplan\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckPlan"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "patch": {"operationId": "updateCheckplan", "summary": "Update some fields of a Checkplan", "description": "Update some fields of a Checkplan\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckPlan"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "delete": {"operationId": "deleteCheckplan", "summary": "Delete a Checkplan", "description": "Delete a Checkplan\nRequired scopes: check:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this check plan.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/classification": {"get": {"operationId": "getClassifications", "summary": "Retrieve all classifications", "description": "Retrieve all classifications of all models in the project\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "post": {"operationId": "createClassification", "summary": "Create a classification", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n    If created classification already exists, it will not be duplicated and the previous one will be returned.\n    You also can add a 'classification' filter on this endpoint. By ex: /classification?name='untec'. The name is case sensitive\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/classification/{id}": {"get": {"operationId": "getClassification", "summary": "Retrieve a classification", "description": "Retrieve a classification\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "put": {"operationId": "fullUpdateClassification", "summary": "Update all fields of a classification", "description": "Update all fields of a classification\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Classification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "patch": {"operationId": "updateClassification", "summary": "Update some fields of a classification", "description": "Update some fields of a classification\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Classification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "delete": {"operationId": "deleteClassification", "summary": "Delete a classification", "description": "All elements having this classification will lose it\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this classification.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/document": {"get": {"operationId": "getDocuments", "summary": "Retrieve all documents", "description": "Retrieve all documents in the project\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Document"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "post": {"operationId": "createDocument", "summary": "Create a document", "description": "RCreate a document. If the document is an IFC, an IFC model will be created and attached to this document\nRequired scopes: document:write", "parameters": [{"name": "parent", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "parent_id", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "creator", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "project", "in": "formData", "required": true, "type": "integer"}, {"name": "name", "in": "formData", "description": "Shown name of the file", "required": true, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "file_name", "in": "formData", "description": "Full name of the file", "required": false, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "description", "in": "formData", "description": "Description of the file", "required": false, "type": "string", "x-nullable": true}, {"name": "file", "in": "formData", "required": true, "type": "file"}, {"name": "size", "in": "formData", "description": "Size of the file.", "required": false, "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Document"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/document/{id}": {"get": {"operationId": "getDocument", "summary": "Retrieve a document", "description": "Retrieve a document in the project\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "put": {"operationId": "fullUpdateDocument", "summary": "Update all fields of the document", "description": "Update all fields of the document\nRequired scopes: document:write", "parameters": [{"name": "parent", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "parent_id", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "creator", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "project", "in": "formData", "required": true, "type": "integer"}, {"name": "name", "in": "formData", "description": "Shown name of the file", "required": true, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "file_name", "in": "formData", "description": "Full name of the file", "required": false, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "description", "in": "formData", "description": "Description of the file", "required": false, "type": "string", "x-nullable": true}, {"name": "file", "in": "formData", "required": true, "type": "file"}, {"name": "size", "in": "formData", "description": "Size of the file.", "required": false, "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["collaboration"]}, "patch": {"operationId": "updateDocument", "summary": "Update some fields of the document", "description": "Update some fields of the document\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Document"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "delete": {"operationId": "deleteDocument", "summary": "Delete the document", "description": "Delete the document\nRequired scopes: document:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this document.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/folder": {"get": {"operationId": "getFolders", "summary": "Retrieve all folders", "description": "Retrieve all folders in the project. This is an array of folder. If you want to get the tree of all folders, see getProjectTree\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Folder"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "post": {"operationId": "createFolder", "summary": "Create a folder", "description": "If the created folder have no parent, it will be put as a child of the default root folder of the project\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/folder/{id}": {"get": {"operationId": "getFolder", "summary": "Retrieve a folder", "description": "Retrieve a folder\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "put": {"operationId": "fullUpdateFolder", "summary": "Update all fields of a folder", "description": "Update all fields of a folder\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "patch": {"operationId": "updateFolder", "summary": "Update some fields of a folder", "description": "Update some fields of a folder\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "delete": {"operationId": "deleteFolder", "summary": "Delete a folder", "description": "All files and subfolders will be deleted too. If folder is a project's root folder, only children are deleted\nRequired scopes: document:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this folder.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc": {"get": {"operationId": "getIfcs", "summary": "Retrieve all models", "description": "Retrieve all models\nRequired scopes: ifc:read", "parameters": [{"name": "status", "in": "query", "description": "Filter the returned list by status", "required": false, "type": "string"}, {"name": "source", "in": "query", "description": "Filter the returned list by source", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Ifc"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}": {"get": {"operationId": "getIfc", "summary": "Retrieve one model", "description": "\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ifc"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfc", "summary": "Update all fields of a model", "description": "Update all fields of a model\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ifc"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ifc"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfc", "summary": "Update some fields of a model", "description": "Update some fields of a model\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ifc"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ifc"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfc", "summary": "Delete a model", "description": "It will delete the related document too\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/bvh": {"get": {"operationId": "getIfcMap", "summary": "Get bvh file", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the bvh file\n        \nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "The file"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/errors": {"post": {"operationId": "addIfcErrors", "summary": "Add errors to IFC", "description": "IFC errors are warnings and errors during IFC process. They alert about missing elements or malformed files\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcErrors"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/IfcErrors"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/export": {"post": {"operationId": "exportIfc", "summary": "Export IFC", "description": "Export IFC as requested in parameters. When the export is finished, a new IFC file with will be created in the same folder than the original IFC. You can query the folder or subscribe to the new document webhook to retrieve the result\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcExport"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/IfcExport"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/files": {"patch": {"operationId": "updateIfcFiles", "summary": "Update models file (gltf, svg, structure, etc)", "description": "\n        Patch ifc files (gltf, structure, svg, etc)\n        \nRequired scopes: ifc:write", "parameters": [{"name": "structure_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "systems_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "map_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "gltf_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "bvh_tree_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "viewer_360_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "xkt_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcFiles"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/gltf": {"get": {"operationId": "getIfcGLTF", "summary": "Get gltf file", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the gltf file\n        \nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "The file"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/map": {"get": {"operationId": "getIfcBVH", "summary": "Get svg file", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the map file\n        \nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "The file"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/structure": {"get": {"operationId": "getIfcStructure", "summary": "Get structure file", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the structure file\n        \nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "The file"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/systems": {"get": {"operationId": "getIfcSystems", "summary": "Get systems file", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the system file\n        \nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "The file"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token": {"get": {"operationId": "getAccessTokens", "summary": "Retrieve all tokens created for this model", "description": "Retrieve all tokens created for this model\nRequired scopes: ifc:token_manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/IfcAccessToken"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createAccessToken", "summary": "Create a token for this model", "description": "Tokens are read_only by default and are valid 1 day\nRequired scopes: ifc:token_manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcAccessToken"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/IfcAccessToken"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/access_token/{token}": {"get": {"operationId": "getAccessToken", "summary": "Retrieve one token created for this model", "description": "Retrieve one token created for this model\nRequired scopes: ifc:token_manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcAccessToken"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateAccessToken", "summary": "Update all fields of a token", "description": "You can update the expiration date or the read_only field\nRequired scopes: ifc:token_manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcAccessToken"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcAccessToken"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateAccessToken", "summary": "Update some fields of a token", "description": "You can update the expiration date or the read_only field\nRequired scopes: ifc:token_manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcAccessToken"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcAccessToken"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteAccessToken", "summary": "Delete a token", "description": "Deleting a token will revoke it.\nRequired scopes: ifc:token_manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "token", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker": {"get": {"operationId": "getCheckers", "summary": "Retrieve all checkers of a model", "description": "A checker is a link between a checkplan and a model. A checker can launch a check multiple time and store all the results\nRequired scopes: check:read, ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/IfcChecker"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "post": {"operationId": "createChecker", "summary": "Create a checker to a model", "description": "A checker is a link between a checkplan and a model. A checker can launch a check multiple time and store all the results\nRequired scopes: check:write, ifc:read", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result": {"get": {"operationId": "getCheckerResults", "summary": "Retrieve all CheckerResults", "description": "Retrieve all CheckerResults\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CheckerResult"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "post": {"operationId": "createCheckerResult", "summary": "Create a CheckerResult", "description": "TCreate a CheckerResult\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckerResult"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "checker_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}": {"get": {"operationId": "getCheckerResult", "summary": "Retrieve one CheckerResult", "description": "Retrieve one CheckerResult\nRequired scopes: check:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "put": {"operationId": "fullUpdateCheckerResult", "summary": "Update all fields of a CheckerResult", "description": "Update all fields of a CheckerResult\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckerResult"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "patch": {"operationId": "updateCheckerResult", "summary": "Update some fields of a CheckerResult", "description": "Update some fields of a CheckerResult\nRequired scopes: check:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckerResult"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "delete": {"operationId": "deleteCheckerResult", "summary": "Delete a CheckerResult", "description": "Delete a CheckerResult\nRequired scopes: check:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "checker_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this checker result.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}": {"get": {"operationId": "getChecker", "summary": "Retrieve a checker of a model", "description": "A checker is a link between a checkplan and a model. A checker can launch a check multiple time and store all the results\nRequired scopes: check:read, ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "put": {"operationId": "fullUpdateChecker", "summary": "Update all fields of a checker of a model", "description": "A checker is a link between a checkplan and a model. A checker can launch a check multiple time and store all the results\nRequired scopes: check:write, ifc:read", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "patch": {"operationId": "updateChecker", "summary": "Update some fields of a checker of a model", "description": "A checker is a link between a checkplan and a model. A checker can launch a check multiple time and store all the results\nRequired scopes: check:write, ifc:read", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "delete": {"operationId": "deleteChecker", "summary": "Delete a checker of a model", "description": "A checker is a link between a checkplan and a model. A checker can launch a check multiple time and store all the results\nRequired scopes: check:write, ifc:read", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc checker.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}/launch-check": {"post": {"operationId": "launchNewCheck", "summary": "Launch a new check on the model", "description": "Starts a new check in the checker\nRequired scopes: check:write, ifc:read", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"201": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["checker"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc checker.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification": {"get": {"operationId": "getIfcClassifications", "summary": "Retrieve all classifications in a model", "description": "Retrieve all classifications in a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element": {"get": {"operationId": "listClassificationElementRelations", "summary": "List all associations between classifications and elements", "description": "List all associations between classifications and elements\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ElementClassificationRelation"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createClassificationElementRelations", "summary": "Create association between existing classification and existing element", "description": "Create association between existing classification and existing element\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/ElementClassificationRelation"}}}], "responses": {"201": {"description": "The response is empty"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/list_destroy": {"delete": {"operationId": "bulkDeleteIfcClassifications", "summary": "Remove all classifications from model's elements", "description": "\n            Delete relation between filtered classifications (eg. /classifications?name=untec) and all ifc's elements.\n            No classification will be deleted on this endpoint, only the relation between ifc's elements and their classification.\n        \nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element": {"get": {"operationId": "getElementsFromClassification", "summary": "Retrieve all elements with the classification", "description": "Retrieve all elements with the classification\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_classification_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/bulk_destroy": {"delete": {"operationId": "bulkRemoveElementsFromClassification", "summary": "Remove the classifications from all elements", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    \nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_classification_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/{uuid}": {"delete": {"operationId": "removeElementsFromClassification", "summary": "Remove the classification from all elements", "description": "Remove the classification from all elements. No element nor classification will be deleted\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_classification_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "description": "IFC element or element type UUID", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element": {"get": {"operationId": "getElements", "summary": "Retrieve all elements of a model", "description": "Retrieve all elements of a model. If not filtered, the json may be very large. To efficently retrieve all elements and their data, see getRawElements\nRequired scopes: ifc:read", "parameters": [{"name": "type", "in": "query", "description": "Filter the returned list by type", "required": false, "type": "string"}, {"name": "classification", "in": "query", "description": "Filter the returned list by classification", "required": false, "type": "string"}, {"name": "classification__notation", "in": "query", "description": "Filter the returned list by classification__notation", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createElement", "summary": "Create an element in the model", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/bulk_update": {"put": {"operationId": "bulkUpdateElements", "summary": "Update many elements at once (all field must be defined)", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "bulkFullUpdateElements", "summary": "Update many elements at once (only changing fields may be defined)", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw": {"get": {"operationId": "getRawElements", "summary": "Retrieve all elements in a optimized format", "description": "\n        Returns elements, property_sets, properties, definitions and units in a JSON optimized structure\n        \nRequired scopes: ifc:read", "parameters": [{"name": "type", "in": "query", "description": "Filter the returned list by type", "required": false, "type": "string"}, {"name": "classification", "in": "query", "description": "Filter the returned list by classification", "required": false, "type": "string"}, {"name": "classification__notation", "in": "query", "description": "Filter the returned list by classification__notation", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RawElements"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createRawElements", "summary": "Create elements in an optimized format", "description": "\n        You can use the same optimized structure to post multiple elements, property_sets, properties, definitions and units at once.\n        For performance reasons, we do not check the validity of the json. If the json is malformed, an error 500 without more explaination may be returned instead of a 400.\n        \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RawElements"}}], "responses": {"201": {"description": "Empty response"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/simple": {"get": {"operationId": "getSimpleElements", "summary": "Retrieve all elements of a model with a simple value representation", "description": "\n        Retrieve all elements of a model with a simple value representation\n        Format response :\n            {\n                :element_uuid: {\n                    \"attributes\": {\n                        :property_name: value,\n                        :property_name: value\n                    },\n                    :property_set_name: {\n                        :property_name: value,\n                        :property_name: value\n                    }\n                }\n            }\n        \nRequired scopes: ifc:read", "parameters": [{"name": "type", "in": "query", "description": "Filter the returned list by type", "required": false, "type": "string"}, {"name": "classification", "in": "query", "description": "Filter the returned list by classification", "required": false, "type": "string"}, {"name": "classification__notation", "in": "query", "description": "Filter the returned list by classification__notation", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SimpleElement"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification": {"get": {"operationId": "getClassificationsOfElement", "summary": "Retrieve all classifications of an element", "description": "Retrieve all classifications of an element\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createClassificationsOfElement", "summary": "Create one or many classifications to an element", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n    If classification created already exists, it will just be added to item's classifications and will not be duplicated\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/bulk_destroy": {"delete": {"operationId": "bulkRemoveClassificationsOfElement", "summary": "Remove many classifications from an element", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    \nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/{id}": {"delete": {"operationId": "removeClassificationOfElement", "summary": "Remove a classification from an element", "description": "The classification will not be deleted\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this classification.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset": {"get": {"operationId": "getElementPropertySets", "summary": "Retrieve all PropertySets of an element", "description": "Retrieve all PropertySets of an element\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySet", "summary": "Create a PropertySets to an element", "description": "Create a PropertySets that will be automatically linked to the element\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertySet"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}": {"get": {"operationId": "getElementPropertySet", "summary": "Retrieve a PropertySet of an element", "description": "Retrieve a PropertySet of an element\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySet", "summary": "Remove a PropertySet from an element", "description": "Delete the relation between the element and the property set. Does not delete any object\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property set.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property": {"get": {"operationId": "getElementPropertySetProperties", "summary": "Retrieve all Properties of a PropertySet", "description": "Retrieve all Properties of a PropertySet\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySetProperty", "summary": "Create a property to a PropertySet", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Property"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Property"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}": {"get": {"operationId": "getElementPropertySetProperty", "summary": "Retrieve a Property of a PropertySet", "description": "Retrieve a Property of a PropertySet\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySetProperty", "summary": "Remove a property from a PropertySet", "description": "\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition": {"get": {"operationId": "getElementPropertySetPropertyDefinitions", "summary": "Retrieve all Definitions of a PropertySet", "description": "Retrieve all Definitions of a PropertySet\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySetPropertyDefinition", "summary": "Create a Definition to a Property", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertyDefinition"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}": {"get": {"operationId": "getElementPropertySetPropertyDefinition", "summary": "Retrieve a Definition of a Property", "description": "Retrieve a Definition of a Property\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySetPropertyDefinition", "summary": "Remove a Definition from a Property", "description": "\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property definition.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit": {"get": {"operationId": "getElementPropertySetPropertyDefinitionUnits", "summary": "Retrieve all Units of a Definition", "description": "Retrieve all Units of a Definition\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySetPropertyDefinitionUnit", "summary": "Create a Unit to a Definition", "description": "Create a Unit to a Definition\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Unit"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertydefinition_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}": {"get": {"operationId": "getElementPropertySetPropertyDefinitionUnit", "summary": "Retrieve a Unit of a Definition", "description": "Retrieve a Unit of a Definition\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySetPropertyDefinitionUnit", "summary": "Remove a Unit from a Definition", "description": "Remove a Unit from a Definition\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this unit.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertydefinition_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}": {"get": {"operationId": "getElement", "summary": "Retrieve an element of a model", "description": "Retrieve an element of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Element"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateElement", "summary": "Update all fields of an element", "description": "Update all fields of a element. The IFC file will not be updated. The created element will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Element"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Element"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateElement", "summary": "Update some fields of a zone", "description": "Update some fields of a zone. The IFC file will not be updated. The created element will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Element"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Element"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteElement", "summary": "Delete a zone of a model", "description": "The IFC file will not be updated. The remaining elements are available in API and will be available when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "description": "IFC element or element type UUID", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}/simple": {"get": {"operationId": "getSimpleElement", "summary": "Retrieve an element of a model with a simple value representation", "description": "\n        Retrieve an element of a model with a simple value representation\n        Format response :\n            {\n                :element_uuid: {\n                    \"attributes\": {\n                        :property_name: value,\n                        :property_name: value\n                    },\n                    :property_set_name: {\n                        :property_name: value,\n                        :property_name: value\n                    }\n                }\n            }\n        \nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SimpleElement"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "description": "IFC element or element type UUID", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer": {"get": {"operationId": "getLayers", "summary": "Retrieve all layers of a model", "description": "Retrieve all layers of a model.\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Layer"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createLayer", "summary": "Create a layer in the model", "description": "The IFC file will not be updated. The created layer will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Layer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Layer"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/layer/{id}": {"get": {"operationId": "getLayer", "summary": "Retrieve a layer of a model", "description": "Retrieve a layer of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Layer"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateLayer", "summary": "Update all fields of a layer", "description": "Update all fields of a layer. The IFC file will not be updated. The created layer will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Layer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Layer"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateLayer", "summary": "Update some fields of a layer", "description": "Update some fields of a layer. The IFC file will not be updated. The created layer will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Layer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Layer"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteLayer", "summary": "Delete a layer of a model", "description": "The IFC file will not be updated. The remaining layers are available in API and will be available when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this layer.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler": {"get": {"operationId": "getProcessorHandlers", "summary": "Get all processor handlers", "description": "\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProcessorHandler"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/processorhandler/{id}": {"get": {"operationId": "getProcessorHandler", "summary": "Retrieve a processor handler", "description": "\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProcessorHandler"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "updateProcessorHandler", "summary": "Update the status of a processor handler", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProcessorHandler"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProcessorHandler"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "fullUpdateProcessorHandler", "summary": "Update the status of a processor handler", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProcessorHandler"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProcessorHandler"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this processor handler.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property": {"get": {"operationId": "getIfcProperties", "summary": "Retrieve all Properties of a model", "description": "Retrieve all PropertySets of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_destroy": {"delete": {"operationId": "bulkDeleteIfcProperties", "summary": "Delete many Property of a model", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    \nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_update": {"put": {"operationId": "bulkUpdateIfcProperty", "summary": "Update all fields of many properties of a model", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "bulkFullUpdateIfcProperty", "summary": "Update some fields of many properties of a model", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}": {"get": {"operationId": "getIfcProperty", "summary": "Retrieve a Property of a model", "description": "Retrieve a Property of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfcProperty", "summary": "Update some fields of a Property", "description": "Update some fields of a Property\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Property"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfcProperty", "summary": "Update some fields of a Property", "description": "Update some fields of a Property\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Property"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfcProperty", "summary": "Delete a Property of a model", "description": "Delete a Property of a model\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition": {"get": {"operationId": "getIfcPropertyDefinitions", "summary": "Retrieve all PropertyDefinitions of a model", "description": "Retrieve all PropertyDefinitions of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createIfcPropertyDefinition", "summary": "Create a PropertyDefinition on the model", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/bulk_destroy": {"delete": {"operationId": "bulkDeleteIfcPropertyDefinitions", "summary": "Delete many PropertyDefinitions of a model", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    \nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}": {"get": {"operationId": "getIfcPropertyDefinition", "summary": "Retrieve a PropertyDefinition of a model", "description": "Retrieve a PropertyDefinition of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfcPropertyDefinition", "summary": "Update all fields of many PropertyDefinitions of a model", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertyDefinition"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfcPropertyDefinition", "summary": "Update some fields of many PropertyDefinitions of a model", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertyDefinition"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfcPropertyDefinition", "summary": "Delete a PropertyDefinitions of a model", "description": "Delete a PropertyDefinitions of a model\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property definition.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset": {"get": {"operationId": "getPropertySets", "summary": "Retrieve all PropertySets of a model", "description": "Retrieve all PropertySets of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createPropertySet", "summary": "Create a PropertySet", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset-element": {"post": {"operationId": "createPropertySetElementRelations", "summary": "Create association between PropertySet and element", "description": "Create association between existing PropertySet and existing element\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/ElementPropertySetRelation"}}}], "responses": {"201": {"description": "The response is empty"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/bulk_destroy": {"delete": {"operationId": "bulkDeletePropertySet", "summary": "Delete many PropertySet of a model", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    \nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}": {"get": {"operationId": "getPropertySet", "summary": "Retrieve a PropertySet of a model", "description": "Retrieve a PropertySet of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdatePropertySet", "summary": "Update all fields of a PropertySet", "description": "Update all fields of a PropertySet\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertySet"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updatePropertySet", "summary": "Update some fields of a PropertySet", "description": "Update some fields of a PropertySet\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertySet"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deletePropertySet", "summary": "Delete a PropertySet of a model", "description": "Delete a PropertySet of a model\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property set.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space": {"get": {"operationId": "getSpaces", "summary": "Retrieve all spaces of the model", "description": "Retrieve all spaces of the model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createSpace", "summary": "Create a space in the model", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}": {"get": {"operationId": "getSpace", "summary": "Retrieve one space of the model", "description": "Retrieve one space of the model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateSpace", "summary": "Update all fields of a space", "description": "Update all fields of a space. The IFC file will not be updated. The created space will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateSpace", "summary": "Update some fields of a space", "description": "Update some fields of a space. The IFC file will not be updated. The created space will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteSpace", "summary": "Delete a space", "description": "It will not delete related zones. The IFC file will not be updated. The remaining spaces are available in API and will be available when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this space.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system": {"get": {"operationId": "getSystems", "summary": "Retrieve all systems of a model", "description": "Retrieve all systems of a model.\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/System"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createSystem", "summary": "Create a system in the model", "description": "The IFC file will not be updated. The created system will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/System"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/System"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/system/{uuid}": {"get": {"operationId": "getSystem", "summary": "Retrieve a system of a model", "description": "Retrieve a system of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/System"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateSystem", "summary": "Update all fields of a system", "description": "Update all fields of a system. The IFC file will not be updated. The created system will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/System"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/System"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateSystem", "summary": "Update some fields of a system", "description": "Update some fields of a system. The IFC file will not be updated. The created system will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/System"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/System"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteSystem", "summary": "Delete a system of a model", "description": "The IFC file will not be updated. The remaining systems are available in API and will be available when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "description": "IFC sytem or system type UUID", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit": {"get": {"operationId": "getIfcUnits", "summary": "Retrieve all Units of a model", "description": "Retrieve all Units of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createIfcUnit", "summary": "Create a Unit on a model", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/bulk_destroy": {"delete": {"operationId": "bulkDeleteIfcUnits", "summary": "Delete many Units of a model", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    \nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}": {"get": {"operationId": "getIfcUnit", "summary": "Retrieve a Unit of a model", "description": "Retrieve a Unit of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfcUnit", "summary": "Update all fields of a Unit of a model", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Unit"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfcUnit", "summary": "Update some fields of a Unit of a model", "description": "\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Unit"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfcUnit", "summary": "Delete a Unit of a model", "description": "Delete a Unit of a model\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this unit.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone": {"get": {"operationId": "getZones", "summary": "Retrieve zones of a model", "description": "Retrieve parent zones of a model. Children zones we'll be in the 'zones' field\nRequired scopes: ifc:read", "parameters": [{"name": "color", "in": "query", "description": "Filter the returned list by color", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createZone", "summary": "Create a zone in the model", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \nThe IFC file will not be updated. The created zone will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}": {"get": {"operationId": "getZone", "summary": "Retrieve one zone of a model", "description": "Retrieve one zone of a model\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Zone"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateZone", "summary": "Update all fields of a zone", "description": "Update all fields of a zone. The IFC file will not be updated. The created zone will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Zone"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Zone"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateZone", "summary": "Update some fields of a zone", "description": "Update some fields of a zone. The IFC file will not be updated. The created zone will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Zone"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Zone"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteZone", "summary": "Delete a zone of a model", "description": "The IFC file will not be updated. The remaining zones are available in API and will be available when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this zone.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space": {"get": {"operationId": "getZoneSpaces", "summary": "Retrieve all spaces of a zone", "description": "Retrieve all spaces of a zone\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ZoneSpace"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "post": {"operationId": "createZoneSpace", "summary": "Create a space in a zone", "description": "The IFC file will not be updated. The created space will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ZoneSpace"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "zone_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}": {"get": {"operationId": "getZoneSpace", "summary": "Retrieve one space of a zone", "description": "Retrieve one space of a zone\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateZoneSpace", "summary": "Update all fields of a space", "description": "Update all fields of a space. The IFC file will not be updated. The created space will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ZoneSpace"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "patch": {"operationId": "updateZoneSpace", "summary": "Update some fields of a space", "description": "Update some fields of a space. The IFC file will not be updated. The created space will be accessible over the API and when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ZoneSpace"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteZoneSpace", "summary": "Delete a space of a zone", "description": "The IFC file will not be updated. The remaining spaces are available in API and will be available when exporting an IFC file\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this space.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "zone_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/invitation": {"get": {"operationId": "getProjectInvitations", "summary": "Retrieve all pending invitations in the project", "description": "Returns app's invitations only\nRequired scopes: org:manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProjectInvitation"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "post": {"operationId": "inviteProjectUser", "summary": "Invite a project member", "description": "Invite a project member. If the user is not already a cloud member, they will also be invited in the cloud with USER role.\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectInvitation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ProjectInvitation"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/invitation/{id}": {"delete": {"operationId": "cancelProjectUserInvitation", "summary": "Cancel a pending invitation", "description": "\nRequired scopes: org:manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this invitation.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/user": {"get": {"operationId": "getProjectUsers", "summary": "Retrieve all users in a project", "description": "Each member of a project can see other members of the project\nRequired scopes: cloud:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/user/{id}": {"get": {"operationId": "getProjectUser", "summary": "Retrieve a user in a project", "description": "Each member of a project can see other members of the project\nRequired scopes: cloud:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "put": {"operationId": "fullUpdateProjectUser", "summary": "Update all fields of a project user", "description": "Change the user role in the cloud\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserProjectUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "patch": {"operationId": "updateProjectUser", "summary": "Update some fields of a project user", "description": "Change the user role in the cloud\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserProjectUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "delete": {"operationId": "deleteProjectUser", "summary": "Remove a user from a project", "description": "Remove a user from a project\nRequired scopes: cloud:manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this fos user.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/user": {"get": {"operationId": "getCloudUsers", "summary": "Retrieve all users in a cloud", "description": "Only administrators can see all cloud members\nRequired scopes: cloud:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/user/{id}": {"get": {"operationId": "getCloudUser", "summary": "Retrieve a user in a cloud", "description": "Only administrators can see a cloud member\nRequired scopes: cloud:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "put": {"operationId": "fullUpdateCloudUser", "summary": "Update all fields of a cloud user", "description": "Change the user role in the cloud\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserCloudUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "patch": {"operationId": "updateCloudUser", "summary": "Update some fields of a cloud user", "description": "Change the user role in the cloud\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserCloudUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "delete": {"operationId": "deleteCloudUser", "summary": "Remove a user from a cloud", "description": "The user will also be removed from all the projects of the cloud\nRequired scopes: cloud:manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this fos user.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/webhook": {"get": {"operationId": "getWebHooks", "summary": "Retrieve all configured webhooks", "description": "Retrieve all configured webhooks\nRequired scopes: webhook:manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/WebHook"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["webhook"]}, "post": {"operationId": "createWebHook", "summary": "Create a new Webhook", "description": "Create a new Webhook\nRequired scopes: webhook:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["webhook"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/webhook/{id}": {"get": {"operationId": "getWebHook", "summary": "Retrieve one configured webhook", "description": "Retrieve one configured webhook\nRequired scopes: webhook:manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["webhook"]}, "put": {"operationId": "fullUpdateWebHook", "summary": "Update all field of a webhook", "description": "Update all field of a webhook\nRequired scopes: webhook:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["webhook"]}, "patch": {"operationId": "updateWebHook", "summary": "Update some field of a webhook", "description": "Update some field of a webhook\nRequired scopes: webhook:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["webhook"]}, "delete": {"operationId": "deleteWebHook", "summary": "Delete a webhook", "description": "Delete a webhook\nRequired scopes: webhook:manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["webhook"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/webhook/{id}/ping": {"post": {"operationId": "pingWebHook", "summary": "Test a webhook", "description": "Trigger a Ping Event sending {\"ok\": true} to the webhook URL. Useful to test your app\nRequired scopes: webhook:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["webhook"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/cloud/{id}": {"get": {"operationId": "getCloud", "summary": "Retrieve one cloud", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "put": {"operationId": "fullUpdateCloud", "summary": "Update all fields of a cloud", "description": "\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Cloud"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "patch": {"operationId": "updateCloud", "summary": "Update some fields of a cloud", "description": "Update some fields of a cloud\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Cloud"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "delete": {"operationId": "deleteCloud", "summary": "Delete a cloud", "description": "\nRequired scopes: cloud:manage", "parameters": [], "responses": {"204": {"description": ""}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud.", "required": true, "type": "integer"}]}, "/cloud/{id}/create-demo": {"post": {"operationId": "createDemo", "summary": "Create a Demo project in a cloud", "description": "Create a demo project with a pre-populated IFC and its data\nRequired scopes: cloud:manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud.", "required": true, "type": "integer"}]}, "/cloud/{id}/size": {"get": {"operationId": "getCloudSize", "summary": "Get size of all files in the cloud", "description": "Returns the size of the cloud in Bytes", "parameters": [], "responses": {"200": {"description": "Size of the cloud in Bytes", "schema": {"type": "integer"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration", "ifc"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud.", "required": true, "type": "integer"}]}, "/identity-provider/invitation": {"get": {"operationId": "getInvitations", "summary": "Retrieve all invitations", "description": "Retrieve all invitations of your identity provider\nRequired scopes: org:manage", "parameters": [{"name": "status", "in": "query", "description": "Filter the returned list by status", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Invitation"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["sso"]}, "parameters": []}, "/identity-provider/invitation/{id}": {"get": {"operationId": "getInvitation", "summary": "Retrieve an invitation", "description": "Retrieve all invitations of your identity provider\nRequired scopes: org:manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Invitation"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["sso"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this invitation.", "required": true, "type": "integer"}]}, "/identity-provider/invitation/{id}/accept": {"post": {"operationId": "acceptInvitation", "summary": "Accept an invitation", "description": "If the user already exists, s\u00b7he is added to the cloud and projet. If not, we wait their first connection to add them.\nRequired scopes: org:manage", "parameters": [], "responses": {"204": {"description": "empty"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["sso"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this invitation.", "required": true, "type": "integer"}]}, "/identity-provider/invitation/{id}/deny": {"post": {"operationId": "denyInvitation", "summary": "Deny an invitation", "description": "The invitation status change to DENIED and the user is not added to the cloud. You can accept an invitation previously denied\nRequired scopes: org:manage", "parameters": [], "responses": {"204": {"description": "empty"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["sso"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this invitation.", "required": true, "type": "integer"}]}, "/identity-provider/user": {"delete": {"operationId": "deleteUser", "summary": "Delete user form BIMData", "description": "NON HANDLED EDGE CASE:\nThe user has been created on the identity provider (exists on the IDP)\nThe user (or an app) has requested an access token (exists on keycloak)\nBut the user has never used the API (doesn't exist on the API)\nSo the API can't delete the user and can't forward the call to keycloak so a zombie user will stay on keycloak", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SelectUser"}}], "responses": {"204": {"description": "empty"}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["sso"]}, "parameters": []}, "/user": {"get": {"operationId": "getSelfUser", "summary": "Get info about the current user", "description": "Get info about the current user", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SelfUser"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "patch": {"operationId": "updateSelfUser", "summary": "Update info of the current user", "description": "DEPRECATED. The user must be updated on its identity provider", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SelfUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SelfUser"}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"], "deprecated": true}, "parameters": []}, "/user/projects": {"get": {"operationId": "getSelfProjects", "summary": "List current user's projects", "description": "List user's projects of all clouds\nRequired scopes: user:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}, "400": {"description": "A required field is missing in the body"}, "401": {"description": "The authentication failed. Your token may be expired, missing or malformed"}, "403": {"description": "You don't have the authorization to access this resource. Check if the resource is exclusive to users or app (eg: /user is exclusive to users) or if your user has the right to access this resource."}, "404": {"description": "The resource does not exist or you don't have the right to see if the resource exists"}, "500": {"description": "Something really bad happened. Check if your route is correct. By example: /cloud/[object Object]/project may raise a 500. An alert is automatically sent to us, we'll look at it shortly."}}, "tags": ["collaboration"]}, "parameters": []}}, "definitions": {"SelfBcfUser": {"required": ["id", "email"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}, "title": "SelfBcfUser"}, "BcfProject": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the project", "type": "string", "maxLength": 256, "minLength": 1}}}, "TopicType": {"required": ["topic_type"], "type": "object", "properties": {"topic_type": {"title": "Topic type", "type": "string", "maxLength": 255, "minLength": 1}}}, "TopicStatus": {"required": ["topic_status"], "type": "object", "properties": {"topic_status": {"title": "Topic status", "type": "string", "maxLength": 255, "minLength": 1}}}, "Label": {"required": ["label"], "type": "object", "properties": {"label": {"title": "Label", "type": "string", "maxLength": 255, "minLength": 1}}}, "Priority": {"required": ["priority"], "type": "object", "properties": {"priority": {"title": "Priority", "type": "string", "maxLength": 255, "minLength": 1}}}, "Stage": {"required": ["stage"], "type": "object", "properties": {"stage": {"title": "Stage", "type": "string", "maxLength": 255, "minLength": 1}}}, "Extensions": {"required": ["topic_type", "topic_status", "topic_label", "priority", "stage"], "type": "object", "properties": {"topic_type": {"type": "array", "items": {"title": "TopicType", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_status": {"type": "array", "items": {"title": "TopicStatus", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_label": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "priority": {"type": "array", "items": {"title": "Priority", "type": "string", "minLength": 0}, "x-nullable": true}, "user_id_type": {"type": "array", "items": {"type": "string", "minLength": 1}, "readOnly": true}, "stage": {"type": "array", "items": {"title": "Stage", "type": "string", "minLength": 0}, "x-nullable": true}}}, "BcfUser": {"title": "Creation author", "required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}}, "Comment": {"required": ["comment"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid"}, "date": {"title": "Date", "type": "string", "format": "date-time"}, "author": {"type": "string", "format": "email", "title": "User", "x-nullable": true, "readOnly": true}, "comment": {"title": "Comment", "type": "string", "minLength": 1}, "viewpoint_guid": {"title": "Viewpoint guid", "type": "string", "format": "uuid", "x-nullable": true}, "reply_to_comment_guid": {"title": "Reply to comment guid", "type": "string", "format": "uuid", "x-nullable": true}, "topic_guid": {"title": "Topic guid", "type": "string", "format": "uuid", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "x-nullable": true, "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "viewpoint_temp_id": {"title": "Viewpoint temp id", "description": "Only used when using POST on the full-topic route to bind viewpoint with comment", "type": "integer"}}}, "Direction": {"title": "Camera direction", "required": ["x", "y", "z"], "type": "object", "properties": {"x": {"title": "X", "type": "number"}, "y": {"title": "Y", "type": "number"}, "z": {"title": "Z", "type": "number"}}}, "Point": {"title": "Camera view point", "required": ["x", "y", "z"], "type": "object", "properties": {"x": {"title": "X", "type": "number"}, "y": {"title": "Y", "type": "number"}, "z": {"title": "Z", "type": "number"}}}, "OrthogonalCamera": {"title": "Orthogonal camera", "required": ["view_to_world_scale", "camera_direction", "camera_up_vector", "camera_view_point"], "type": "object", "properties": {"view_to_world_scale": {"title": "View to world scale", "type": "number"}, "camera_direction": {"$ref": "#/definitions/Direction"}, "camera_up_vector": {"$ref": "#/definitions/Direction"}, "camera_view_point": {"$ref": "#/definitions/Point"}}}, "PerspectiveCamera": {"title": "Perspective camera", "required": ["field_of_view", "camera_direction", "camera_up_vector", "camera_view_point"], "type": "object", "properties": {"field_of_view": {"title": "Field of view", "type": "number"}, "camera_direction": {"$ref": "#/definitions/Direction"}, "camera_up_vector": {"$ref": "#/definitions/Direction"}, "camera_view_point": {"$ref": "#/definitions/Point"}, "bimdata_camera_direction": {"$ref": "#/definitions/Direction"}}}, "LineSeriaizer": {"required": ["end_point", "start_point"], "type": "object", "properties": {"end_point": {"$ref": "#/definitions/Point"}, "start_point": {"$ref": "#/definitions/Point"}}}, "ClippingPlane": {"required": ["location", "direction"], "type": "object", "properties": {"location": {"$ref": "#/definitions/Point"}, "direction": {"$ref": "#/definitions/Direction"}}}, "Snapshot": {"title": "Snapshot", "required": ["snapshot_type"], "type": "object", "properties": {"snapshot_type": {"title": "Snapshot type", "type": "string", "maxLength": 255, "minLength": 1}, "snapshot_data": {"title": "Snapshot data", "type": "string", "readOnly": true, "format": "uri"}}}, "Component": {"type": "object", "properties": {"ifc_guid": {"title": "Ifc guid", "type": "string", "maxLength": 255, "x-nullable": true}, "originating_system": {"title": "Originating system", "type": "string", "maxLength": 255, "x-nullable": true}, "authoring_tool_id": {"title": "Authoring tool id", "type": "string", "maxLength": 255, "x-nullable": true}}}, "Coloring": {"required": ["color", "components"], "type": "object", "properties": {"color": {"title": "Color", "type": "string", "maxLength": 255, "minLength": 1}, "components": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}}, "ViewSetupHints": {"title": "View setup hints", "type": "object", "properties": {"spaces_visible": {"title": "Spaces visible", "type": "boolean"}, "space_boundaries_visible": {"title": "Space boundaries visible", "type": "boolean"}, "openings_visible": {"title": "Openings visible", "type": "boolean"}}}, "Visibility": {"title": "Visibility", "required": ["exceptions", "view_setup_hints"], "type": "object", "properties": {"default_visibility": {"title": "Default visibility", "type": "boolean"}, "exceptions": {"type": "array", "items": {"$ref": "#/definitions/Component"}}, "view_setup_hints": {"$ref": "#/definitions/ViewSetupHints"}}}, "ComponentsParent": {"title": "Components", "required": ["visibility"], "type": "object", "properties": {"coloring": {"type": "array", "items": {"$ref": "#/definitions/Coloring"}}, "visibility": {"$ref": "#/definitions/Visibility"}, "selection": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}}, "Viewpoint": {"type": "object", "properties": {"index": {"title": "Index", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "guid": {"title": "Guid", "type": "string", "format": "uuid"}, "orthogonal_camera": {"$ref": "#/definitions/OrthogonalCamera"}, "perspective_camera": {"$ref": "#/definitions/PerspectiveCamera"}, "lines": {"type": "array", "items": {"$ref": "#/definitions/LineSeriaizer"}}, "clipping_planes": {"type": "array", "items": {"$ref": "#/definitions/ClippingPlane"}}, "snapshot": {"$ref": "#/definitions/Snapshot"}, "components": {"$ref": "#/definitions/ComponentsParent"}, "temp_id": {"title": "Temp id", "description": "Only used when using POST on the full-topic route to bind viewpoint with comment", "type": "integer"}}}, "FullTopic": {"required": ["title", "project"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid"}, "creation_date": {"title": "Creation date", "type": "string", "format": "date-time"}, "creation_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "reference_links": {"type": "array", "items": {"title": "Reference links", "type": "string", "minLength": 1}, "x-nullable": true}, "ifcs": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "labels": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_type": {"type": "string", "title": "TopicType", "x-nullable": true}, "topic_status": {"type": "string", "title": "TopicStatus", "x-nullable": true}, "stage": {"type": "string", "title": "Stage", "x-nullable": true}, "priority": {"type": "string", "title": "Priority", "x-nullable": true}, "index": {"title": "Index", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "assigned_to": {"type": "string", "format": "email", "title": "User", "x-nullable": true}, "format": {"title": "Format", "type": "string", "maxLength": 64, "minLength": 1}, "due_date": {"title": "Due date", "type": "string", "format": "date-time", "x-nullable": true}, "comments": {"type": "array", "items": {"$ref": "#/definitions/Comment"}}, "viewpoints": {"type": "array", "items": {"$ref": "#/definitions/Viewpoint"}}, "project": {"title": "Project", "type": "integer"}}}, "Topic": {"required": ["title", "project"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid"}, "topic_type": {"type": "string", "title": "TopicType", "x-nullable": true}, "topic_status": {"type": "string", "title": "TopicStatus", "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "priority": {"type": "string", "title": "Priority", "x-nullable": true}, "labels": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "creation_date": {"title": "Creation date", "type": "string", "format": "date-time"}, "creation_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "assigned_to": {"type": "string", "format": "email", "title": "User", "x-nullable": true}, "reference_links": {"type": "array", "items": {"title": "Reference links", "type": "string", "minLength": 1}, "x-nullable": true}, "stage": {"type": "string", "title": "Stage", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "due_date": {"title": "Due date", "type": "string", "format": "date-time", "x-nullable": true}, "ifcs": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "format": {"title": "Format", "type": "string", "maxLength": 64, "minLength": 1}, "index": {"title": "Index", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "project": {"title": "Project", "type": "integer"}}}, "Feature": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "description": "Name of the feature", "type": "string", "maxLength": 127, "minLength": 1}, "viewer_url": {"title": "Viewer url", "description": "Viewer's url to load instead of standard's one", "type": "string", "maxLength": 512, "x-nullable": true}}}, "User": {"title": "User", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "readOnly": true, "minLength": 1}, "company": {"title": "Company", "type": "string", "readOnly": true}, "firstname": {"title": "Firstname", "type": "string", "readOnly": true, "minLength": 1}, "lastname": {"title": "Lastname", "type": "string", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "cloud_role": {"title": "Cloud role", "type": "integer", "readOnly": true}, "project_role": {"title": "Project role", "type": "integer", "readOnly": true}, "provider": {"title": "Provider", "type": "string", "readOnly": true, "minLength": 1}}}, "ClientUser": {"title": "Creator app", "required": ["client_id"], "type": "object", "properties": {"client_id": {"title": "Client id", "type": "string", "maxLength": 64, "minLength": 1}, "provider": {"title": "Provider", "type": "integer", "x-nullable": true}}}, "Cloud": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the cloud", "type": "string", "maxLength": 256, "minLength": 1}, "features": {"type": "array", "items": {"$ref": "#/definitions/Feature"}, "readOnly": true}, "creator": {"$ref": "#/definitions/User"}, "creator_app": {"$ref": "#/definitions/ClientUser"}, "is_default": {"title": "Is default", "type": "boolean", "readOnly": true}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}}}, "CloudInvitation": {"required": ["email", "redirect_uri"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "description": "email of the user to invite", "type": "string", "maxLength": 256, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "description": "User will be redirected to this uri when they accept the invitation", "type": "string", "maxLength": 512, "minLength": 1}, "role": {"title": "Role", "type": "integer", "enum": [100, 50], "readOnly": true}}}, "Project": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "name": {"title": "Name", "description": "Name of the project", "type": "string", "maxLength": 256, "minLength": 1}, "cloud": {"$ref": "#/definitions/Cloud"}, "status": {"title": "Status", "type": "string", "enum": ["A", "D"]}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}, "parent_id": {"title": "Parent id", "type": "integer", "x-nullable": true}, "root_folder_id": {"title": "Root folder id", "type": "string", "readOnly": true}}}, "ProjectWithChildren": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "name": {"title": "Name", "description": "Name of the project", "type": "string", "maxLength": 256, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["A", "D"]}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}, "parent_id": {"title": "Parent id", "type": "integer", "x-nullable": true}, "children": {"type": "array", "items": {"$ref": "#/definitions/ProjectWithChildren"}, "readOnly": true}, "root_folder_id": {"title": "Root folder id", "type": "string", "readOnly": true}}}, "RecursiveFolderChildren": {"required": ["id", "parent_id", "name", "created_at", "updated_at"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "parent_id": {"title": "Parent id", "type": "integer"}, "created_by": {"$ref": "#/definitions/User"}, "creator": {"$ref": "#/definitions/User"}, "type": {"title": "Type", "description": "Values can be 'Folder', 'Document' or 'Ifc'. It is usefull to parse the tree and discriminate folders and files", "type": "string", "enum": ["Folder", "Document", "Ifc"], "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "file_name": {"title": "File name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "size": {"title": "Size", "type": "integer"}, "ifc_id": {"title": "Ifc id", "type": "integer", "readOnly": true}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}, "children": {"type": "array", "items": {"$ref": "#/definitions/RecursiveFolderChildren"}, "x-nullable": true}}}, "Folder": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent_id": {"title": "Parent id", "type": "integer", "x-nullable": true}, "type": {"title": "Type", "description": "Value is \"Folder\". It is usefull to parse the tree and discriminate folders and files", "type": "string", "readOnly": true}, "name": {"title": "Name", "description": "Name of the folder", "type": "string", "maxLength": 255, "minLength": 1}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}, "created_by": {"$ref": "#/definitions/User"}, "children": {"type": "array", "items": {"$ref": "#/definitions/RecursiveFolderChildren"}, "readOnly": true}}}, "RuleComponent": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "value": {"title": "Value", "type": "object", "x-nullable": true}, "operator": {"title": "Operator", "type": "string", "x-nullable": true}, "params": {"title": "Params", "type": "object", "x-nullable": true}, "condition": {"title": "Condition", "type": "string", "x-nullable": true}, "rule_components": {"title": "Rule components", "type": "object", "x-nullable": true}}}, "Rule": {"required": ["condition"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "condition": {"title": "Condition", "type": "string", "minLength": 1}, "rule_components": {"type": "array", "items": {"$ref": "#/definitions/RuleComponent"}}, "on": {"$ref": "#/definitions/Rule"}}}, "Ruleset": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent_ruleset_id": {"title": "Parent ruleset id", "type": "string"}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "rules": {"type": "array", "items": {"$ref": "#/definitions/Rule"}}, "rulesets": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}}}, "CheckPlan": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "rulesets": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}, "is_default": {"title": "Is default", "type": "boolean", "readOnly": true}}}, "Classification": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the clasification (uniformat, Untec, custom, etc)", "type": "string", "x-nullable": true}, "notation": {"title": "Notation", "description": "Code of the classification", "type": "string", "x-nullable": true}, "title": {"title": "Title", "description": "Full title of the classification", "type": "string", "x-nullable": true}}}, "Document": {"required": ["project", "name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent": {"title": "Parent", "type": "integer", "x-nullable": true}, "parent_id": {"title": "Parent id", "type": "integer", "x-nullable": true}, "creator": {"title": "Creator", "type": "integer", "x-nullable": true}, "project": {"title": "Project", "type": "integer"}, "name": {"title": "Name", "description": "Shown name of the file", "type": "string", "maxLength": 512, "minLength": 1}, "file_name": {"title": "File name", "description": "Full name of the file", "type": "string", "maxLength": 512, "minLength": 1}, "description": {"title": "Description", "description": "Description of the file", "type": "string", "x-nullable": true}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}, "size": {"title": "Size", "description": "Size of the file.", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}, "ifc_id": {"title": "Ifc id", "type": "string", "readOnly": true}}}, "Ifc": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true}, "creator": {"$ref": "#/definitions/User"}, "status": {"title": "Status", "type": "string", "readOnly": true}, "source": {"title": "Source", "type": "string", "enum": ["UPLOAD", "SPLIT", "MERGE", "EXPORT"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "document_id": {"title": "Document id", "type": "string", "readOnly": true}, "document": {"$ref": "#/definitions/Document"}, "structure_file": {"title": "Structure file", "type": "string", "readOnly": true, "format": "uri"}, "systems_file": {"title": "Systems file", "type": "string", "readOnly": true, "format": "uri"}, "map_file": {"title": "Map file", "type": "string", "readOnly": true, "format": "uri"}, "gltf_file": {"title": "Gltf file", "type": "string", "readOnly": true, "format": "uri"}, "bvh_tree_file": {"title": "Bvh tree file", "type": "string", "readOnly": true, "format": "uri"}, "viewer_360_file": {"title": "Viewer 360 file", "type": "string", "readOnly": true, "format": "uri"}, "xkt_file": {"title": "Xkt file", "type": "string", "readOnly": true, "format": "uri"}, "project_id": {"title": "Project id", "type": "string", "readOnly": true}, "world_position": {"description": "[x,y,z] array of the position of the local_placement in world coordinates", "type": "array", "items": {"title": "World position", "type": "number"}, "maxItems": 3, "x-nullable": true}, "errors": {"description": "List of errors that happened during IFC processing", "type": "array", "items": {"title": "Errors", "type": "string", "minLength": 1}, "readOnly": true}, "warnings": {"description": "List of warnings that happened during IFC processing", "type": "array", "items": {"title": "Warnings", "type": "string", "minLength": 1}, "readOnly": true}}}, "IfcErrors": {"type": "object", "properties": {"errors": {"description": "List of errors that happened during IFC processing", "type": "array", "items": {"title": "Errors", "type": "string", "minLength": 1}, "x-nullable": true}, "warnings": {"description": "List of warnings that happened during IFC processing", "type": "array", "items": {"title": "Warnings", "type": "string", "minLength": 1}, "x-nullable": true}}}, "IfcExport": {"required": ["file_name"], "type": "object", "properties": {"classifications": {"title": "Classifications", "description": "Exported IFC will include classifications from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include classifications(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "zones": {"title": "Zones", "description": "Exported IFC will include zones from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include zones(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "properties": {"title": "Properties", "description": "Exported IFC will include properties from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include properties(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "systems": {"title": "Systems", "description": "Exported IFC will include systems from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include systems(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "layers": {"title": "Layers", "description": "Exported IFC will include layers from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include layers(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "materials": {"title": "Materials", "description": "Exported IFC will include materials from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include materials(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "attributes": {"title": "Attributes", "description": "Exported IFC will include attributes from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include attributes(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "structure": {"title": "Structure", "description": "Exported IFC will include the structure from original IFC file (ORIGINAL), from latest API updates (UPDATED), or won't include structure(NONE)", "type": "string", "enum": ["ORIGINAL", "UPDATED", "NONE"], "default": "UPDATED"}, "uuids": {"description": "Exported IFC will only have those elements. If omitted, all elements will be exported", "type": "array", "items": {"type": "string", "maxLength": 22, "minLength": 22}}, "file_name": {"title": "File name", "description": "The name of the exported IFC file. It MUST end with .ifc or the exported file won't be processed by BIMData", "type": "string", "maxLength": 512, "minLength": 1}}}, "IfcFiles": {"type": "object", "properties": {"structure_file": {"title": "Structure file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "systems_file": {"title": "Systems file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "map_file": {"title": "Map file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "gltf_file": {"title": "Gltf file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "bvh_tree_file": {"title": "Bvh tree file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "viewer_360_file": {"title": "Viewer 360 file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "xkt_file": {"title": "Xkt file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "IfcAccessToken": {"type": "object", "properties": {"token": {"title": "Token", "type": "string", "readOnly": true, "minLength": 1}, "read_only": {"title": "Read only", "type": "boolean"}, "expires_at": {"title": "Expires at", "type": "string", "format": "date-time"}}}, "IfcChecker": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "ifc": {"$ref": "#/definitions/Ifc"}, "creator": {"$ref": "#/definitions/User"}, "name": {"title": "Name", "type": "string", "maxLength": 256, "x-nullable": true}, "checkplan_id": {"title": "Checkplan id", "type": "integer"}, "results": {"type": "array", "items": {"required": ["checker"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "error_detail": {"title": "Error detail", "type": "string", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["C", "P", "E"]}, "result": {"title": "Result", "type": "string", "x-nullable": true}, "collisions": {"title": "Collisions", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "checker": {"title": "Checker", "type": "integer"}}}, "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "checkplan": {"required": ["name", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "protected": {"title": "Protected", "type": "boolean"}, "project": {"title": "Project", "type": "integer"}}, "readOnly": true}}}, "CheckerResult": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["C", "P", "E"]}, "result": {"title": "Result", "type": "string", "x-nullable": true}, "collisions": {"title": "Collisions", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "error_detail": {"title": "Error detail", "type": "string", "minLength": 1}}}, "ElementClassificationRelation": {"required": ["element_uuid", "classification_id"], "type": "object", "properties": {"element_uuid": {"title": "Element uuid", "type": "string", "minLength": 1}, "classification_id": {"title": "Classification id", "type": "integer"}}}, "Unit": {"title": "Unit", "required": ["type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "description": "IfcDerivedUnit, IfcContextDependentUnit, IfcConversionBasedUnit, IfcSIUnit or IfcMonetaryUnit", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Name of the unit (ex: DEGREE)", "type": "string", "x-nullable": true}, "unit_type": {"title": "Unit type", "description": "IFC type of the unit or user defined type (ex: PLANEANGLEUNIT for DEGREE and RADIAN)", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "Litteral prefix for scale (ex: MILLI, KILO, etc..)", "type": "string", "x-nullable": true}, "dimensions": {"description": "List of 7 units dimensions", "type": "array", "items": {"title": "Dimensions", "type": "number"}, "x-nullable": true}, "conversion_factor": {"title": "Conversion factor", "description": "Factor of conversion and base unit id (ex: DEGREE from RADIAN with factor 0.0174532925199433)", "type": "number", "x-nullable": true}, "conversion_baseunit": {"$ref": "#/definitions/Unit"}, "elements": {"title": "Elements", "description": "List of constitutive unit elements by id with corresponding exponent (ex: [meterID/1, secondID/-1] for velocity)", "type": "object", "x-nullable": true}}}, "PropertyDefinition": {"title": "Definition", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "unit": {"$ref": "#/definitions/Unit"}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "type": {"title": "Type", "description": "IfcProperty*, Ifc*Properties, IfcComplexProperty, IfcQuantity*, IfcComplexQuantity, Attribute", "type": "string", "x-nullable": true}, "value_type": {"title": "Value type", "description": "Type of the corresponding value (Boolean, integer, float, string, IfcRange, ...)", "type": "string", "x-nullable": true}}}, "Property": {"required": ["definition"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "definition": {"$ref": "#/definitions/PropertyDefinition"}, "value": {"title": "Value", "type": "object", "x-nullable": true}}}, "PropertySet": {"title": "Attributes", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "properties": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}}, "LayerElement": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the layer", "type": "string", "maxLength": 255, "minLength": 1}, "identifier": {"title": "Identifier", "type": "string", "maxLength": 255, "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}}}, "Element": {"required": ["type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 22, "minLength": 22}, "type": {"title": "Type", "description": "IFC type for the element", "type": "string", "maxLength": 64, "minLength": 1}, "attributes": {"$ref": "#/definitions/PropertySet"}, "property_sets": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}, "classifications": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}, "layers": {"type": "array", "items": {"$ref": "#/definitions/LayerElement"}}}}, "RawUnit": {"required": ["type"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "minLength": 1}, "unit_type": {"title": "Unit type", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "type": "string", "x-nullable": true}, "elements": {"title": "Elements", "type": "object", "x-nullable": true}, "conversion_factor": {"title": "Conversion factor", "type": "number", "x-nullable": true}, "dimensions": {"type": "array", "items": {"type": "number"}, "x-nullable": true}, "conversion_baseunit_index": {"title": "Conversion baseunit index", "type": "integer", "x-nullable": true}}}, "RawDefinition": {"type": "object", "properties": {"description": {"title": "Description", "type": "string", "x-nullable": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "value_type": {"title": "Value type", "type": "string", "x-nullable": true}, "unit_id": {"title": "Unit id", "type": "integer", "x-nullable": true}}, "x-nullable": true}, "RawProperty": {"required": ["def_id"], "type": "object", "properties": {"value": {"title": "Value", "type": "object", "x-nullable": true}, "def_id": {"title": "Def id", "type": "integer"}}}, "RawPropertySet": {"required": ["properties"], "type": "object", "properties": {"description": {"title": "Description", "type": "string", "x-nullable": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "properties": {"type": "array", "items": {"$ref": "#/definitions/RawProperty"}}}}, "RawClassification": {"type": "object", "properties": {"type": {"title": "Type", "type": "string", "x-nullable": true}, "notation": {"title": "Notation", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}}, "x-nullable": true}, "RawLayer": {"required": ["name", "description", "identifier"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "identifier": {"title": "Identifier", "type": "string", "minLength": 1}}}, "RawSystem": {"required": ["uuid", "name", "description", "object_type"], "type": "object", "properties": {"uuid": {"title": "Uuid", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "object_type": {"title": "Object type", "type": "string", "minLength": 1}}}, "RawElement": {"required": ["uuid", "type"], "type": "object", "properties": {"uuid": {"title": "Uuid", "type": "string", "minLength": 1}, "type": {"title": "Type", "type": "string", "minLength": 1}, "attributes": {"title": "Attributes", "type": "integer", "x-nullable": true}, "psets": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}, "classifications": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}, "layers": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}, "systems": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}}}, "RawElements": {"required": ["elements"], "type": "object", "properties": {"units": {"type": "array", "items": {"$ref": "#/definitions/RawUnit"}, "x-nullable": true}, "definitions": {"type": "array", "items": {"$ref": "#/definitions/RawDefinition"}, "x-nullable": true}, "property_sets": {"type": "array", "items": {"$ref": "#/definitions/RawPropertySet"}, "x-nullable": true}, "classifications": {"type": "array", "items": {"$ref": "#/definitions/RawClassification"}, "x-nullable": true}, "layers": {"type": "array", "items": {"$ref": "#/definitions/RawLayer"}, "x-nullable": true}, "systems": {"type": "array", "items": {"$ref": "#/definitions/RawSystem"}, "x-nullable": true}, "elements": {"type": "array", "items": {"$ref": "#/definitions/RawElement"}}}}, "SimpleElement": {"required": ["uuid"], "type": "object", "properties": {"uuid": {"title": "Uuid", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "Layer": {"required": ["name", "elements"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the layer", "type": "string", "maxLength": 255, "minLength": 1}, "identifier": {"title": "Identifier", "type": "string", "maxLength": 255, "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "elements": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}}, "ProcessorHandler": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "processor": {"title": "Processor", "type": "integer", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["C", "D", "P", "W", "I", "E", "U"]}, "detail_message": {"title": "Detail message", "type": "string", "x-nullable": true}}}, "ElementPropertySetRelation": {"required": ["element_uuid", "property_set_id"], "type": "object", "properties": {"element_uuid": {"title": "Element uuid", "type": "string", "minLength": 1}, "property_set_id": {"title": "Property set id", "type": "integer"}}}, "Space": {"required": ["uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "x-nullable": true}, "longname": {"title": "Longname", "type": "string", "maxLength": 255, "x-nullable": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zone_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "System": {"required": ["elements"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 22, "minLength": 22}, "name": {"title": "Name", "description": "Name of the system", "type": "string", "maxLength": 255, "x-nullable": true}, "object_type": {"title": "Object type", "type": "string", "maxLength": 255, "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "elements": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}}, "Zone": {"required": ["uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "x-nullable": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zones": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}, "parent_id": {"title": "Parent id", "type": "integer"}, "spaces": {"type": "array", "items": {"$ref": "#/definitions/Space"}}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "color": {"title": "Color", "type": "string", "maxLength": 8, "x-nullable": true}}}, "ZoneSpace": {"required": ["uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "x-nullable": true}, "longname": {"title": "Longname", "type": "string", "maxLength": 255, "x-nullable": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zone_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "ProjectInvitation": {"required": ["email", "redirect_uri", "role"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "description": "email of the user to invite", "type": "string", "maxLength": 256, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "description": "User will be redirected to this uri when they accept the invitation", "type": "string", "maxLength": 512, "minLength": 1}, "role": {"title": "Role", "type": "integer", "enum": [100, 50, 25]}}}, "UserProjectUpdate": {"type": "object", "properties": {"role": {"title": "Role", "description": "User's role in the project", "type": "integer", "enum": [100, 50, 25]}}}, "UserCloudUpdate": {"type": "object", "properties": {"role": {"title": "Role", "description": "Role of the user in the cloud", "type": "integer", "enum": [100, 50]}}}, "WebHook": {"required": ["events", "url", "secret"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "events": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "url": {"title": "Url", "type": "string", "maxLength": 1024, "minLength": 1}, "secret": {"title": "Secret", "type": "string", "maxLength": 256, "minLength": 1}}}, "Invitation": {"required": ["redirect_uri", "cloud_name", "cloud_role", "email"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "client_id": {"title": "Client id", "type": "string", "readOnly": true}, "redirect_uri": {"title": "Redirect uri", "description": "User will be redirected to this uri when they accept the invitation", "type": "string", "maxLength": 512, "minLength": 1}, "cloud_name": {"title": "Cloud name", "type": "string", "minLength": 1}, "cloud_role": {"title": "Cloud role", "description": "Role the user will have when they accept the invitation", "type": "integer", "enum": [100, 50]}, "project_name": {"title": "Project name", "type": "string", "minLength": 1}, "project_role": {"title": "Project role", "description": "Role the user will have when they accept the invitation", "type": "integer", "enum": [100, 50, 25], "x-nullable": true}, "email": {"title": "Email", "description": "email of the user to invite", "type": "string", "maxLength": 256, "minLength": 1}, "status": {"title": "Status", "description": "\n        A: Accepted\n        D: Denied\n        P: Pending\n        W: Accepted but waiting for user first login to finish the process\n        ", "type": "string", "enum": ["A", "D", "P", "W"]}, "sender_provider_sub": {"title": "Sender provider sub", "description": "OIDC sub of the sender. The original sub from the provider is used instead of the broker sub", "type": "string", "minLength": 1}}}, "SelectUser": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "CloudRole": {"required": ["cloud"], "type": "object", "properties": {"cloud": {"title": "Cloud", "type": "integer"}, "role": {"title": "Role", "description": "Role of the user in the cloud", "type": "integer", "enum": [100, 50]}}}, "ProjectRole": {"required": ["project"], "type": "object", "properties": {"project": {"title": "Project", "type": "integer"}, "role": {"title": "Role", "description": "User's role in the project", "type": "integer", "enum": [100, 50, 25]}}}, "SelfUser": {"required": ["email", "firstname", "lastname"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "company": {"title": "Company", "type": "string", "x-nullable": true}, "firstname": {"title": "Firstname", "type": "string", "minLength": 1}, "lastname": {"title": "Lastname", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "clouds": {"type": "array", "items": {"$ref": "#/definitions/CloudRole"}, "readOnly": true}, "projects": {"type": "array", "items": {"$ref": "#/definitions/ProjectRole"}, "readOnly": true}, "provider": {"title": "Provider", "type": "string", "readOnly": true, "minLength": 1}, "provider_sub": {"title": "Provider sub", "description": "sub from original identity provider", "type": "string", "maxLength": 255, "x-nullable": true}, "sub": {"title": "Sub", "description": "sub from Keycloak", "type": "string", "maxLength": 255, "x-nullable": true}}, "title": "SelfUser"}}}
